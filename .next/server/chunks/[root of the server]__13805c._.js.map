{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/yellow-real-estate/src/app/api/contact/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport nodemailer from 'nodemailer';\n\nexport async function POST(request: Request) {\n  try {\n    const { name, email, message } = await request.json();\n\n    // Create a transporter using Gmail SMTP\n    const transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: process.env.GMAIL_USER,\n        pass: process.env.GMAIL_APP_PASSWORD,\n      },\n    });\n\n    // Email content\n    const mailOptions = {\n      from: process.env.GMAIL_USER,\n      to: process.env.GMAIL_USER,\n      subject: `Nuova richiesta di contatto da ${name}`,\n      text: `\n        Name: ${name}\n        Email: ${email}\n        Message: ${message}\n      `,\n      html: `\n        <h2>Nuova richiesta di contatto</h2>\n        <p><strong>Nome:</strong> ${name}</p>\n        <p><strong>Email:</strong> ${email}</p>\n        <p><strong>Messaggio:</strong> ${message}</p>\n      `,\n    };\n\n    // Send email\n    await transporter.sendMail(mailOptions);\n\n    return NextResponse.json({ message: 'Email sent successfully' }, { status: 200 });\n  } catch (error) {\n    console.error('Error sending email:', error);\n    return NextResponse.json({ error: 'Failed to send email' }, { status: 500 });\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEnD,wCAAwC;QACxC,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,SAAS;YACT,MAAM;gBACJ,MAAM,QAAQ,GAAG,CAAC,UAAU;gBAC5B,MAAM,QAAQ,GAAG,CAAC,kBAAkB;YACtC;QACF;QAEA,gBAAgB;QAChB,MAAM,cAAc;YAClB,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,IAAI,QAAQ,GAAG,CAAC,UAAU;YAC1B,SAAS,CAAC,+BAA+B,EAAE,MAAM;YACjD,MAAM,CAAC;cACC,EAAE,KAAK;eACN,EAAE,MAAM;iBACN,EAAE,QAAQ;MACrB,CAAC;YACD,MAAM,CAAC;;kCAEqB,EAAE,KAAK;mCACN,EAAE,MAAM;uCACJ,EAAE,QAAQ;MAC3C,CAAC;QACH;QAEA,aAAa;QACb,MAAM,YAAY,QAAQ,CAAC;QAE3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA0B,GAAG;YAAE,QAAQ;QAAI;IACjF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}